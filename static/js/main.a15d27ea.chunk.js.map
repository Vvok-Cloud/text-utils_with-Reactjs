{"version":3,"sources":["component/NavBar.js","component/TextForm.js","component/Alerts.js","App.js","index.js"],"names":["NavBar","props","className","mode","href","type","id","title","about","onClick","toggleMode","htmlFor","prototype","PropTypes","string","isRequired","TextForm","useState","Text","setText","style","color","heading","backgroundColor","rows","value","onChange","e","target","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","trim","Alerts","alert","role","word","lower","charAt","slice","capitalize","message","App","setMode","setAlert","setTimeout","body","ReactDOM","render"],"mappings":"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","file":"static/js/main.a15d27ea.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Fragment } from 'react/cjs/react.production.min'\r\nimport PropTypes from 'prop-types';\r\nfunction NavBar(props) {\r\n  return (\r\n    <Fragment>\r\n\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">Navbar</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.title}</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">{props.about}</a>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              < input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable to Dark Mode</label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default NavBar\r\n\r\nNavBar.prototype = {\r\n  title: PropTypes.string.isRequired\r\n}","import React, { useState } from \"react\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\n\r\nfunction TextForm(props) {\r\n    // Create First State\r\n    const [Text, setText] = useState(\"\");\r\n    // text =\"Enter Tetx\"   // Wronge Way\r\n    // setText(\"Enter Text Here\")  // Right Way\r\n\r\n\r\n    // Convert to UperCase Fun\r\n    const handleUpClick = () => {\r\n        // console.log(\"UperCase Clicked :\" + Text);\r\n        // setText(\"To uperCase\")\r\n        let newText = Text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Covert to UperCase\", \"success\")\r\n        // props.showAlert(\"Convert to UperCase\", \"success\")\r\n    };\r\n\r\n    // Convert to Uper Lower Case Fun\r\n    const handleLowClick = () => {\r\n        // console.log(\"UperCase Clicked :\" + Text);\r\n        // setText(\"To uperCase\")\r\n        let newText = Text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Covert to lowerCase\", \"success\")\r\n\r\n    };\r\n        // Clear input  Value func\r\n        const handleClearClick = () => {\r\n            let newText ='';\r\n            setText(newText);\r\n        props.showAlert(\"Clear Text\", \"success\")\r\n\r\n        };\r\n             //Copy Text\r\n        const handleCopy = () => {\r\n            var  newText =document.getElementById(\"myBox\");\r\n            newText.select();\r\n            // text.select();\r\n            navigator.clipboard.writeText(newText.value)\r\n            // setText(newText);\r\n        props.showAlert(\"Copid Text\", \"success\")\r\n\r\n        };\r\n        // Extra Removing Spacing \r\n        const handleExtraReomveSpace = () => {\r\n          let newText=Text.split(/[ ]+/);\r\n          setText(newText.join(' '))\r\n        props.showAlert(\"Removed Extra Spacess\", \"success\")\r\n\r\n        };\r\n\r\n    //handleChange Fun in text Area\r\n    const handleChanger = (e) => {\r\n        // console.log(\"On Change\");\r\n        setText(e.target.value);\r\n    };\r\n    return (\r\n        <Fragment>\r\n        <div className=\"container mt-5 \" style={{color:props.mode=== 'dark'?'white':'#042743'}}>\r\n            <h3 className=\"my-3 \">{props.heading}</h3>\r\n            <div className=\"mb-3\">\r\n                <textarea style={{backgroundColor:props.mode=== 'dark'?'gray':'white',color:props.mode=== 'dark'?'white':'#042743'}}\r\n                    className=\"form-control\"\r\n                    id=\"myBox\"\r\n                    rows=\"8\"\r\n                    value={Text}\r\n                    onChange={handleChanger}\r\n                ></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n                Convert toUperCase\r\n            </button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleLowClick}>\r\n                Convert toLowerCase\r\n            </button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\r\n                Clear Text\r\n            </button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n                Copy Text\r\n            </button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraReomveSpace}>\r\n                Extra Removing Spacing\r\n            </button>\r\n        </div>\r\n        <div className=\"conainter\"  style={{color:props.mode=== 'dark'?'white':'#042743'}}>\r\n            <h2 className=\"my-3\">Your Text Summery</h2>\r\n            \r\n            {/* <p>{Text.split(\" \").length} Words {Text.length} Characters </p> // adding Word Conuting */}\r\n    \r\n               <p> {Text.length>0 ? Text.trim().split(\" \").length : 0} Words {Text.length} Characters </p>             \r\n                <p>{0.08 * Text.split(\" \").length} minutes Read Word</p> {/* // adding Word Time Conut */}\r\n\r\n            <h2>Preview Summary</h2>\r\n            <p>{Text.length>0?Text:\"Enter something in the box above to preview it here\"}</p>\r\n        </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default TextForm;\r\n","import React from \"react\";\r\n\r\nfunction Alerts(props) {\r\n\r\n\r\n    const capitalize =(word)=>{\r\n\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()  + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n       props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n              <strong  > \r\n              {capitalize(props.alert.type)} : {props.alert.message} \r\n                </strong> \r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alerts;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport NavBar from './component/NavBar';\nimport TextFrom from './component/TextForm';\nimport Alerts from './component/Alerts';\n// import DarkMode from './component/DarkMode';\n\nfunction App() {\n\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n\n  const showAlert = (message , type)=>{\n\n    setAlert(\n      {\n        message:message,\n        type:type\n      })\n\n      setTimeout(() => {\n        \n        setAlert(null)\n      }, 1200);\n  }\n\n  const toggleMode=()=>{\n    if(mode === 'light'){\n      setMode('dark')\n\n      document.body.style.backgroundColor=\"#042743\"\n      showAlert(\"Dark Mode is Enable \",\"success\")\n\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor=\"white\"\n      showAlert(\"Light Mode is Enable\", \"success\")\n\n    }\n  }\n\n  return (\n\n    <Fragment>\n     <NavBar title=\"Home\" about=\"About us\" mode={mode}  toggleMode={toggleMode}/>\n      <Alerts alert={alert}/>\n     {/* <DarkMode /> */}\n\n     {/* Text Form Div */}\n     <div className=\"container\">\n     \n     <TextFrom showAlert={showAlert} heading=\"Enter The Text analize Bellow\" mode={mode}/>\n\n     </div>\n    </Fragment>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,document.getElementById('root')\n);\n"],"sourceRoot":""}